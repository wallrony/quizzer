{
	"extends": [
		"airbnb",
		"airbnb/hooks",
		"plugin:@typescript-eslint/recommended",
		"plugin:jest/recommended",
		"plugin:jest/style",
		"plugin:testing-library/react",
		"plugin:import/typescript",
		"plugin:unicorn/recommended",
		"prettier"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.json"
	},
	"plugins": [
		"jest",
		"@typescript-eslint",
		"unicorn",
		"folders",
		"testing-library",
		"unused-imports"
	],
	"env": {
		"node": true,
		"browser": true,
		"jest/globals": true
	},
	"settings": {
		"import/resolver": {
			"typescript": {}
		}
	},
	"rules": {
		"class-methods-use-this": "off",
		"lines-between-class-members": "off",
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"vars": "all",
				"varsIgnorePattern": "^_",
				"args": "after-used",
				"argsIgnorePattern": "^_"
			}
		],
		"unused-imports/no-unused-imports": "error",
		"react/jsx-filename-extension": [
			"error",
			{
				"extensions": [".tsx"]
			}
		],
		"import/extensions": [
			"error",
			"ignorePackages",
			{
				"ts": "never",
				"tsx": "never"
			}
		],
		"react/function-component-definition": [
			"error",
			{
				"namedComponents": "arrow-function",
				"unnamedComponents": "arrow-function"
			}
		],
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": ["error"],
		"@typescript-eslint/consistent-type-definitions": ["error"],
		"unicorn/prevent-abbreviations": "off",
		"unicorn/no-null": "off",
		"no-shadow": "off",
		"unicorn/no-array-for-each": "off",
		"unicorn/no-array-reduce": "off",
		"unicorn/prefer-array-flat": "off",
		"unicorn/prefer-array-flat-map": "off",
		"unicorn/prefer-at": "off",
		"unicorn/prefer-set-has": "off",
		"unicorn/prefer-string-replace-all": "off",
		"unicorn/switch-case-braces": "off",
		"unicorn/no-negated-condition": "off",
		"react/require-default-props": "off",
		"unicorn/prefer-object-from-entries": "off",

		// Disable until false positive in switch case are fixed.
		"no-lone-blocks": "off",

		// Folders naming to follow the kebab case convention.
		"folders/match-regex": ["error", "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$"],
		"curly": ["error", "all"],

		"no-restricted-syntax": [
			// We can't inherit from the recommended config.
			// We must therefore put it back to continue to support it.
			// To be updated manually if it changes in the recommended config.
			// Issue for inherit closed: https://github.com/eslint/eslint/issues/9192
			"error",
			{
				"selector": "ForInStatement",
				"message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
			},
			{
				"selector": "ForOfStatement",
				"message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
			},
			{
				"selector": "LabeledStatement",
				"message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
			},
			{
				"selector": "WithStatement",
				"message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
			},
			"BinaryExpression[operator='in']"
		],
		"sort-imports": ["error", { "ignoreDeclarationSort": true }],
		"import/order": [
			"error",
			{
				"groups": [
					["builtin", "external"],
					"internal",
					["parent", "sibling", "index"],
					"unknown"
				],
				"pathGroupsExcludedImportTypes": ["object", "type"],
				"newlines-between": "always-and-inside-groups",
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				},
				"warnOnUnassignedImports": true
			}
		],
		"unicorn/no-unused-properties": "error",
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"react/no-unknown-property": ["error", { "ignore": ["css"] }]
	},
	"overrides": [
		{
			"files": ["**/*.test.*", "**/*.spec.*"],
			"rules": {
				"import/no-extraneous-dependencies": "off"
			}
		},
		{
			"files": ["**/*.test.tsx", "**/*.spec.tsx"],
			"rules": {
				"react/jsx-props-no-spreading": "off"
			}
		},
		{
			"files": ["**/lib/**/*.tsx", "**/*.ts"],
			"rules": {
				"import/prefer-default-export": "off"
			}
		}
	]
}
